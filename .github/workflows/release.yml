name: release

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    name: build artifacts
    runs-on: ubuntu-latest

    steps:
      - name: checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8

      - name: setup node.js
        uses: actions/setup-node@v4
        with:
          node-version: 21.5.0
          cache: pnpm

      - name: extract version
        id: version
        run: echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: install dependencies
        run: pnpm install --frozen-lockfile

      - name: build application
        run: pnpm build
        env:
          SKIP_LINT: true
          NEXT_TELEMETRY_DISABLED: 1

      - name: prepare artifacts
        run: |
          mkdir -p artifacts

          INCLUDE_FILES=(
            ".next"
            "public"
            "prisma"
            "package.json"
            "pnpm-lock.yaml"
            ".env.example"
            "README.md"
            "next.config.js"
            "postcss.config.js"
            "tailwind.config.js"
            "tsconfig.json"
          )

          cp .env.example .env.production
          INCLUDE_FILES+=(".env.production")

          tar -czf "artifacts/field4u-v${{ steps.version.outputs.version }}.tar.gz" "${INCLUDE_FILES[@]}"
          zip -r "artifacts/field4u-v${{ steps.version.outputs.version }}.zip" "${INCLUDE_FILES[@]}"

      - name: upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: artifacts/

      - name: create release
        uses: softprops/action-gh-release@v1
        with:
          name: field4u v${{ steps.version.outputs.version }}
          draft: false
          prerelease: ${{ contains(github.ref, 'beta') || contains(github.ref, 'alpha') || contains(github.ref, 'rc') }}
          files: |
            artifacts/field4u-v${{ steps.version.outputs.version }}.tar.gz
            artifacts/field4u-v${{ steps.version.outputs.version }}.zip
          body: |
            ## field4u v${{ steps.version.outputs.version }}

            ### installation

            ```bash
            # décompresser l'archive
            tar -xzf field4u-v${{ steps.version.outputs.version }}.tar.gz
            # ou
            unzip field4u-v${{ steps.version.outputs.version }}.zip

            # installer les dépendances
            pnpm install --prod

            # configurer les variables d'environnement
            cp .env.example .env
            # éditer .env avec vos configurations

            # démarrer l'application
            pnpm start
            ```

            ### contenu

            - build next.js optimisé
            - fichiers statiques
            - schémas prisma
            - fichiers de configuration
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
